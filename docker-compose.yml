version: '3'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    env_file:
      - .env

  auth:
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    command: bun --bun start:dev auth # overrides CMD from dockerfile

  shadow-hunters-web-api:
    build:
      context: ./
      dockerfile: ./apps/shadow-hunters-web-api/Dockerfile
    ports:
      - 4000:5000
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - auth
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    command: bun --bun start:dev shadow-hunters-web-api # overrides CMD from dockerfile

  postgres:
    image: postgres
    restart: always
    env_file:
      - .env
    ports:
      - 5436:5432
    volumes:
      #- ./db/data:/var/lib/postgresql/data
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test:
        ["CMD", "pg_isready", "-U", "root", "-d", "shadow_hunters"]
      interval: 5s
      timeout: 10s
      retries: 5

  postgres_admin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - 15432:80
  
volumes:
  pgdata: {}
