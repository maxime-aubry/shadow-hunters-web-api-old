services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    env_file:
      - .env

  auth:
    container_name: auth
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - db
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    command: bun --bun start:dev auth # overrides CMD from dockerfile

  api:
    container_name: api
    build:
      context: ./
      dockerfile: ./apps/api/Dockerfile
    ports:
      - 4000:5000
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - auth
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    command: bun --bun start:dev api # overrides CMD from dockerfile

  db:
    container_name: database
    image: postgres
    restart: always
    env_file:
      - .env
    ports:
      - 5432:5432
    healthcheck:
      test:
        ["CMD", "pg_isready", "-U", "root", "-d", "shadow_hunters"]
      interval: 5s
      timeout: 10s
      retries: 5

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    env_file:
      - .env
    ports:
      - 15432:80
  
volumes:
  pgdata: {}
